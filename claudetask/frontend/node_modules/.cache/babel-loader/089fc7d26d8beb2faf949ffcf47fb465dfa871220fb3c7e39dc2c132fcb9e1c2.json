{"ast":null,"code":"var _jsxFileName = \"/Users/pavelvorosilov/Desktop/Work/Start Up/Claude Code Feature Framework/claudetask/frontend/src/pages/TaskBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Grid, Card, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, Chip, IconButton, List, ListItem, ListItemText, ListItemSecondaryAction, CircularProgress, Alert } from '@mui/material';\nimport { Add as AddIcon, Delete as DeleteIcon, PlayArrow as StartIcon } from '@mui/icons-material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { getActiveProject, getTasks, createTask, updateTaskStatus, deleteTask } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst statusColumns = [{\n  status: 'Backlog',\n  title: 'Backlog',\n  color: '#grey'\n}, {\n  status: 'Analysis',\n  title: 'Analysis',\n  color: '#blue'\n}, {\n  status: 'Ready',\n  title: 'Ready',\n  color: '#green'\n}, {\n  status: 'In Progress',\n  title: 'In Progress',\n  color: '#orange'\n}, {\n  status: 'Testing',\n  title: 'Testing',\n  color: '#purple'\n}, {\n  status: 'Code Review',\n  title: 'Code Review',\n  color: '#brown'\n}, {\n  status: 'Done',\n  title: 'Done',\n  color: '#darkgreen'\n}];\nconst TaskBoard = () => {\n  _s();\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [taskDetailsOpen, setTaskDetailsOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    type: 'Feature',\n    priority: 'Medium'\n  });\n  const queryClient = useQueryClient();\n  const {\n    data: project\n  } = useQuery('activeProject', getActiveProject);\n  const {\n    data: tasks,\n    isLoading,\n    error\n  } = useQuery(['tasks', project === null || project === void 0 ? void 0 : project.id], () => project ? getTasks(project.id) : Promise.resolve([]), {\n    enabled: !!project\n  });\n  const createTaskMutation = useMutation(taskData => project ? createTask(project.id, taskData) : Promise.reject('No project'), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['tasks', project === null || project === void 0 ? void 0 : project.id]);\n      setCreateDialogOpen(false);\n      setNewTask({\n        title: '',\n        description: '',\n        type: 'Feature',\n        priority: 'Medium'\n      });\n    }\n  });\n  const updateStatusMutation = useMutation(({\n    taskId,\n    status\n  }) => updateTaskStatus(taskId, status), {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['tasks', project === null || project === void 0 ? void 0 : project.id]);\n    }\n  });\n  const deleteTaskMutation = useMutation(deleteTask, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['tasks', project === null || project === void 0 ? void 0 : project.id]);\n    }\n  });\n  const handleCreateTask = () => {\n    if (newTask.title.trim()) {\n      createTaskMutation.mutate(newTask);\n    }\n  };\n  const handleStatusChange = (taskId, newStatus) => {\n    updateStatusMutation.mutate({\n      taskId,\n      status: newStatus\n    });\n  };\n  const handleTaskClick = task => {\n    setSelectedTask(task);\n    setTaskDetailsOpen(true);\n  };\n  const getTasksByStatus = status => {\n    return (tasks === null || tasks === void 0 ? void 0 : tasks.filter(task => task.status === status)) || [];\n  };\n  const getPriorityColor = priority => {\n    switch (priority) {\n      case 'High':\n        return 'error';\n      case 'Medium':\n        return 'warning';\n      case 'Low':\n        return 'success';\n      default:\n        return 'default';\n    }\n  };\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"info\",\n      children: \"No active project found. Please initialize a project first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n  }\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"Failed to load tasks. Please try again.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        children: \"Task Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 22\n        }, this),\n        onClick: () => setCreateDialogOpen(true),\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: statusColumns.map(column => {\n        const columnTasks = getTasksByStatus(column.status);\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          lg: 3,\n          xl: 12 / 7,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            sx: {\n              minHeight: '500px'\n            },\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                mb: 2,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  sx: {\n                    color: column.color\n                  },\n                  children: column.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: columnTasks.length,\n                  size: \"small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                children: columnTasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n                  button: true,\n                  onClick: () => handleTaskClick(task),\n                  sx: {\n                    mb: 1,\n                    border: '1px solid #e0e0e0',\n                    borderRadius: 1,\n                    bgcolor: 'background.paper',\n                    cursor: 'pointer',\n                    '&:hover': {\n                      bgcolor: 'action.hover'\n                    }\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: /*#__PURE__*/_jsxDEV(Box, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        noWrap: true,\n                        children: [\"#\", task.id, \" - \", task.title]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Box, {\n                        sx: {\n                          mt: 1,\n                          display: 'flex',\n                          gap: 0.5\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(Chip, {\n                          label: task.priority,\n                          size: \"small\",\n                          color: getPriorityColor(task.priority)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 33\n                        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                          label: task.type,\n                          size: \"small\",\n                          variant: \"outlined\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 204,\n                          columnNumber: 33\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 31\n                      }, this), task.assigned_agent && /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `Agent: ${task.assigned_agent}`,\n                        size: \"small\",\n                        sx: {\n                          mt: 0.5\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 29\n                    }, this),\n                    secondary: task.description ? /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      sx: {\n                        mt: 1\n                      },\n                      children: task.description.length > 50 ? `${task.description.substring(0, 50)}...` : task.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 31\n                    }, this) : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        flexDirection: 'column',\n                        gap: 0.5\n                      },\n                      children: [column.status === 'Backlog' && /*#__PURE__*/_jsxDEV(IconButton, {\n                        size: \"small\",\n                        onClick: e => {\n                          e.stopPropagation();\n                          handleStatusChange(task.id, 'Analysis');\n                        },\n                        title: \"Start Analysis\",\n                        children: /*#__PURE__*/_jsxDEV(StartIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 241,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                        size: \"small\",\n                        onClick: e => {\n                          e.stopPropagation();\n                          deleteTaskMutation.mutate(task.id);\n                        },\n                        title: \"Delete Task\",\n                        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 252,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 244,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 25\n                  }, this)]\n                }, task.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this)\n        }, column.status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: createDialogOpen,\n      onClose: () => setCreateDialogOpen(false),\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Create New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          label: \"Title\",\n          fullWidth: true,\n          variant: \"outlined\",\n          value: newTask.title,\n          onChange: e => setNewTask({\n            ...newTask,\n            title: e.target.value\n          }),\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Description\",\n          fullWidth: true,\n          multiline: true,\n          rows: 3,\n          variant: \"outlined\",\n          value: newTask.description,\n          onChange: e => setNewTask({\n            ...newTask,\n            description: e.target.value\n          }),\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTask.type,\n            label: \"Type\",\n            onChange: e => setNewTask({\n              ...newTask,\n              type: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Feature\",\n              children: \"Feature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Bug\",\n              children: \"Bug\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Priority\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: newTask.priority,\n            label: \"Priority\",\n            onChange: e => setNewTask({\n              ...newTask,\n              priority: e.target.value\n            }),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"High\",\n              children: \"High\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Medium\",\n              children: \"Medium\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"Low\",\n              children: \"Low\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setCreateDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCreateTask,\n          variant: \"contained\",\n          disabled: !newTask.title.trim() || createTaskMutation.isLoading,\n          children: createTaskMutation.isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 45\n          }, this) : 'Create'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskBoard, \"AVTUbet2FzvuqIdTtj/8Ddv4c1Q=\", false, function () {\n  return [useQueryClient, useQuery, useQuery, useMutation, useMutation, useMutation];\n});\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useState","Box","Grid","Card","CardContent","Typography","Button","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Chip","IconButton","List","ListItem","ListItemText","ListItemSecondaryAction","CircularProgress","Alert","Add","AddIcon","Delete","DeleteIcon","PlayArrow","StartIcon","useQuery","useMutation","useQueryClient","getActiveProject","getTasks","createTask","updateTaskStatus","deleteTask","jsxDEV","_jsxDEV","statusColumns","status","title","color","TaskBoard","_s","createDialogOpen","setCreateDialogOpen","taskDetailsOpen","setTaskDetailsOpen","selectedTask","setSelectedTask","newTask","setNewTask","description","type","priority","queryClient","data","project","tasks","isLoading","error","id","Promise","resolve","enabled","createTaskMutation","taskData","reject","onSuccess","invalidateQueries","updateStatusMutation","taskId","deleteTaskMutation","handleCreateTask","trim","mutate","handleStatusChange","newStatus","handleTaskClick","task","getTasksByStatus","filter","getPriorityColor","severity","children","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","minHeight","mb","variant","startIcon","onClick","container","spacing","map","column","columnTasks","item","xs","md","lg","xl","sx","label","length","size","dense","button","border","borderRadius","bgcolor","cursor","primary","noWrap","mt","gap","assigned_agent","secondary","substring","flexDirection","e","stopPropagation","open","onClose","maxWidth","fullWidth","autoFocus","margin","value","onChange","target","multiline","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/pavelvorosilov/Desktop/Work/Start Up/Claude Code Feature Framework/claudetask/frontend/src/pages/TaskBoard.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Chip,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  CircularProgress,\n  Alert,\n  Fab,\n} from '@mui/material';\nimport {\n  Add as AddIcon,\n  Edit as EditIcon,\n  Delete as DeleteIcon,\n  PlayArrow as StartIcon,\n} from '@mui/icons-material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { getActiveProject, getTasks, createTask, updateTaskStatus, deleteTask, Task } from '../services/api';\n\nconst statusColumns = [\n  { status: 'Backlog', title: 'Backlog', color: '#grey' },\n  { status: 'Analysis', title: 'Analysis', color: '#blue' },\n  { status: 'Ready', title: 'Ready', color: '#green' },\n  { status: 'In Progress', title: 'In Progress', color: '#orange' },\n  { status: 'Testing', title: 'Testing', color: '#purple' },\n  { status: 'Code Review', title: 'Code Review', color: '#brown' },\n  { status: 'Done', title: 'Done', color: '#darkgreen' },\n];\n\nconst TaskBoard: React.FC = () => {\n  const [createDialogOpen, setCreateDialogOpen] = useState(false);\n  const [taskDetailsOpen, setTaskDetailsOpen] = useState(false);\n  const [selectedTask, setSelectedTask] = useState<Task | null>(null);\n  const [newTask, setNewTask] = useState({\n    title: '',\n    description: '',\n    type: 'Feature' as 'Feature' | 'Bug',\n    priority: 'Medium' as 'High' | 'Medium' | 'Low',\n  });\n\n  const queryClient = useQueryClient();\n\n  const { data: project } = useQuery('activeProject', getActiveProject);\n  \n  const { data: tasks, isLoading, error } = useQuery(\n    ['tasks', project?.id],\n    () => project ? getTasks(project.id) : Promise.resolve([]),\n    { enabled: !!project }\n  );\n\n  const createTaskMutation = useMutation(\n    (taskData: typeof newTask) => project ? createTask(project.id, taskData) : Promise.reject('No project'),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['tasks', project?.id]);\n        setCreateDialogOpen(false);\n        setNewTask({ title: '', description: '', type: 'Feature', priority: 'Medium' });\n      },\n    }\n  );\n\n  const updateStatusMutation = useMutation(\n    ({ taskId, status }: { taskId: number; status: string }) => updateTaskStatus(taskId, status),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['tasks', project?.id]);\n      },\n    }\n  );\n\n  const deleteTaskMutation = useMutation(deleteTask, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(['tasks', project?.id]);\n    },\n  });\n\n  const handleCreateTask = () => {\n    if (newTask.title.trim()) {\n      createTaskMutation.mutate(newTask);\n    }\n  };\n\n  const handleStatusChange = (taskId: number, newStatus: string) => {\n    updateStatusMutation.mutate({ taskId, status: newStatus });\n  };\n\n  const handleTaskClick = (task: Task) => {\n    setSelectedTask(task);\n    setTaskDetailsOpen(true);\n  };\n\n  const getTasksByStatus = (status: string) => {\n    return tasks?.filter(task => task.status === status) || [];\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case 'High': return 'error';\n      case 'Medium': return 'warning';\n      case 'Low': return 'success';\n      default: return 'default';\n    }\n  };\n\n  if (!project) {\n    return (\n      <Alert severity=\"info\">\n        No active project found. Please initialize a project first.\n      </Alert>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\">\n        Failed to load tasks. Please try again.\n      </Alert>\n    );\n  }\n\n  return (\n    <Box>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n        <Typography variant=\"h4\">\n          Task Board\n        </Typography>\n        <Button\n          variant=\"contained\"\n          startIcon={<AddIcon />}\n          onClick={() => setCreateDialogOpen(true)}\n        >\n          New Task\n        </Button>\n      </Box>\n\n      <Grid container spacing={2}>\n        {statusColumns.map((column) => {\n          const columnTasks = getTasksByStatus(column.status);\n          return (\n            <Grid item xs={12} md={6} lg={3} xl={12/7} key={column.status}>\n              <Card sx={{ minHeight: '500px' }}>\n                <CardContent>\n                  <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\n                    <Typography variant=\"h6\" sx={{ color: column.color }}>\n                      {column.title}\n                    </Typography>\n                    <Chip label={columnTasks.length} size=\"small\" />\n                  </Box>\n                  \n                  <List dense>\n                    {columnTasks.map((task) => (\n                      <ListItem\n                        key={task.id}\n                        button\n                        onClick={() => handleTaskClick(task)}\n                        sx={{\n                          mb: 1,\n                          border: '1px solid #e0e0e0',\n                          borderRadius: 1,\n                          bgcolor: 'background.paper',\n                          cursor: 'pointer',\n                          '&:hover': {\n                            bgcolor: 'action.hover',\n                          },\n                        }}\n                      >\n                        <ListItemText\n                          primary={\n                            <Box>\n                              <Typography variant=\"subtitle2\" noWrap>\n                                #{task.id} - {task.title}\n                              </Typography>\n                              <Box sx={{ mt: 1, display: 'flex', gap: 0.5 }}>\n                                <Chip\n                                  label={task.priority}\n                                  size=\"small\"\n                                  color={getPriorityColor(task.priority) as any}\n                                />\n                                <Chip\n                                  label={task.type}\n                                  size=\"small\"\n                                  variant=\"outlined\"\n                                />\n                              </Box>\n                              {task.assigned_agent && (\n                                <Chip\n                                  label={`Agent: ${task.assigned_agent}`}\n                                  size=\"small\"\n                                  sx={{ mt: 0.5 }}\n                                />\n                              )}\n                            </Box>\n                          }\n                          secondary={\n                            task.description ? (\n                              <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n                                {task.description.length > 50 \n                                  ? `${task.description.substring(0, 50)}...`\n                                  : task.description\n                                }\n                              </Typography>\n                            ) : null\n                          }\n                        />\n                        <ListItemSecondaryAction>\n                          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 0.5 }}>\n                            {column.status === 'Backlog' && (\n                              <IconButton\n                                size=\"small\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  handleStatusChange(task.id, 'Analysis');\n                                }}\n                                title=\"Start Analysis\"\n                              >\n                                <StartIcon />\n                              </IconButton>\n                            )}\n                            <IconButton\n                              size=\"small\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                deleteTaskMutation.mutate(task.id);\n                              }}\n                              title=\"Delete Task\"\n                            >\n                              <DeleteIcon />\n                            </IconButton>\n                          </Box>\n                        </ListItemSecondaryAction>\n                      </ListItem>\n                    ))}\n                  </List>\n                </CardContent>\n              </Card>\n            </Grid>\n          );\n        })}\n      </Grid>\n\n      {/* Create Task Dialog */}\n      <Dialog open={createDialogOpen} onClose={() => setCreateDialogOpen(false)} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>Create New Task</DialogTitle>\n        <DialogContent>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            label=\"Title\"\n            fullWidth\n            variant=\"outlined\"\n            value={newTask.title}\n            onChange={(e) => setNewTask({ ...newTask, title: e.target.value })}\n            sx={{ mb: 2 }}\n          />\n          <TextField\n            margin=\"dense\"\n            label=\"Description\"\n            fullWidth\n            multiline\n            rows={3}\n            variant=\"outlined\"\n            value={newTask.description}\n            onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\n            sx={{ mb: 2 }}\n          />\n          <FormControl fullWidth sx={{ mb: 2 }}>\n            <InputLabel>Type</InputLabel>\n            <Select\n              value={newTask.type}\n              label=\"Type\"\n              onChange={(e) => setNewTask({ ...newTask, type: e.target.value as 'Feature' | 'Bug' })}\n            >\n              <MenuItem value=\"Feature\">Feature</MenuItem>\n              <MenuItem value=\"Bug\">Bug</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl fullWidth>\n            <InputLabel>Priority</InputLabel>\n            <Select\n              value={newTask.priority}\n              label=\"Priority\"\n              onChange={(e) => setNewTask({ ...newTask, priority: e.target.value as 'High' | 'Medium' | 'Low' })}\n            >\n              <MenuItem value=\"High\">High</MenuItem>\n              <MenuItem value=\"Medium\">Medium</MenuItem>\n              <MenuItem value=\"Low\">Low</MenuItem>\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setCreateDialogOpen(false)}>Cancel</Button>\n          <Button\n            onClick={handleCreateTask}\n            variant=\"contained\"\n            disabled={!newTask.title.trim() || createTaskMutation.isLoading}\n          >\n            {createTaskMutation.isLoading ? <CircularProgress size={20} /> : 'Create'}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default TaskBoard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}