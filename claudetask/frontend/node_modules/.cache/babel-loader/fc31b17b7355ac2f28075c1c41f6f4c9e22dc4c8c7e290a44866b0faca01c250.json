{"ast":null,"code":"var _jsxFileName = \"/Users/pavelvorosilov/Desktop/Work/Start Up/Claude Code Feature Framework/claudetask/frontend/src/components/Header.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { AppBar, Toolbar, Typography, Box, IconButton, Chip, CircularProgress } from '@mui/material';\nimport { Settings as SettingsIcon, Refresh as RefreshIcon } from '@mui/icons-material';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport { getActiveProject, getConnectionStatus } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const {\n    data: project,\n    isLoading: projectLoading\n  } = useQuery('activeProject', getActiveProject, {\n    refetchInterval: 30000\n  });\n  const {\n    data: connection,\n    isLoading: connectionLoading,\n    refetch: refetchConnection\n  } = useQuery('connectionStatus', getConnectionStatus, {\n    refetchInterval: 10000\n  });\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"fixed\",\n    sx: {\n      zIndex: theme => theme.zIndex.drawer + 1\n    },\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"div\",\n        sx: {\n          flexGrow: 1\n        },\n        children: \"ClaudeTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [projectLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this) : project ? /*#__PURE__*/_jsxDEV(Chip, {\n          label: `Project: ${project.name}`,\n          color: \"secondary\",\n          variant: \"outlined\",\n          sx: {\n            color: 'white',\n            borderColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"No Project Active\",\n          color: \"error\",\n          variant: \"outlined\",\n          sx: {\n            color: 'white',\n            borderColor: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), connectionLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 20,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Chip, {\n            label: connection !== null && connection !== void 0 && connection.connected ? 'Claude Connected' : 'Claude Disconnected',\n            color: connection !== null && connection !== void 0 && connection.connected ? 'success' : 'error',\n            size: \"small\",\n            variant: \"outlined\",\n            sx: {\n              color: 'white',\n              borderColor: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            onClick: () => refetchConnection(),\n            size: \"small\",\n            children: /*#__PURE__*/_jsxDEV(RefreshIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          component: Link,\n          to: \"/settings\",\n          children: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"lM1yIg+vWWAytGTbhkmcvqtAhXI=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","AppBar","Toolbar","Typography","Box","IconButton","Chip","CircularProgress","Settings","SettingsIcon","Refresh","RefreshIcon","useQuery","Link","getActiveProject","getConnectionStatus","jsxDEV","_jsxDEV","Header","_s","data","project","isLoading","projectLoading","refetchInterval","connection","connectionLoading","refetch","refetchConnection","position","sx","zIndex","theme","drawer","children","variant","component","flexGrow","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","size","color","label","name","borderColor","connected","onClick","to","_c","$RefreshReg$"],"sources":["/Users/pavelvorosilov/Desktop/Work/Start Up/Claude Code Feature Framework/claudetask/frontend/src/components/Header.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Box,\n  IconButton,\n  Chip,\n  CircularProgress,\n} from '@mui/material';\nimport { Settings as SettingsIcon, Refresh as RefreshIcon } from '@mui/icons-material';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport { getActiveProject, getConnectionStatus } from '../services/api';\n\nconst Header: React.FC = () => {\n  const { data: project, isLoading: projectLoading } = useQuery(\n    'activeProject',\n    getActiveProject,\n    { refetchInterval: 30000 }\n  );\n\n  const { data: connection, isLoading: connectionLoading, refetch: refetchConnection } = useQuery(\n    'connectionStatus',\n    getConnectionStatus,\n    { refetchInterval: 10000 }\n  );\n\n  return (\n    <AppBar position=\"fixed\" sx={{ zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n      <Toolbar>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          ClaudeTask\n        </Typography>\n        \n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n          {/* Project Status */}\n          {projectLoading ? (\n            <CircularProgress size={20} color=\"inherit\" />\n          ) : project ? (\n            <Chip\n              label={`Project: ${project.name}`}\n              color=\"secondary\"\n              variant=\"outlined\"\n              sx={{ color: 'white', borderColor: 'white' }}\n            />\n          ) : (\n            <Chip\n              label=\"No Project Active\"\n              color=\"error\"\n              variant=\"outlined\"\n              sx={{ color: 'white', borderColor: 'white' }}\n            />\n          )}\n\n          {/* Connection Status */}\n          {connectionLoading ? (\n            <CircularProgress size={20} color=\"inherit\" />\n          ) : (\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <Chip\n                label={connection?.connected ? 'Claude Connected' : 'Claude Disconnected'}\n                color={connection?.connected ? 'success' : 'error'}\n                size=\"small\"\n                variant=\"outlined\"\n                sx={{ color: 'white', borderColor: 'white' }}\n              />\n              <IconButton\n                color=\"inherit\"\n                onClick={() => refetchConnection()}\n                size=\"small\"\n              >\n                <RefreshIcon />\n              </IconButton>\n            </Box>\n          )}\n\n          {/* Settings */}\n          <IconButton\n            color=\"inherit\"\n            component={Link}\n            to=\"/settings\"\n          >\n            <SettingsIcon />\n          </IconButton>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}