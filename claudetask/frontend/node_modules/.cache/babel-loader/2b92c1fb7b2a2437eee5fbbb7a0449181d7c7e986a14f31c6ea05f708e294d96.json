{"ast":null,"code":"var _jsxFileName = \"/Users/pavelvorosilov/Desktop/Work/Start Up/Claude Code Feature Framework/claudetask/frontend/src/pages/Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Grid, Card, CardContent, Typography, CircularProgress, Alert, Chip, List, ListItem, ListItemText, ListItemIcon } from '@mui/material';\nimport { Assignment as TaskIcon, PlayArrow as PlayIcon, CheckCircle as DoneIcon, Warning as BlockedIcon } from '@mui/icons-material';\nimport { useQuery } from 'react-query';\nimport { getActiveProject, getTaskQueue, getConnectionStatus } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    data: project,\n    isLoading: projectLoading,\n    error: projectError\n  } = useQuery('activeProject', getActiveProject, {\n    refetchInterval: 30000\n  });\n  const {\n    data: queue,\n    isLoading: queueLoading,\n    error: queueError\n  } = useQuery('taskQueue', getTaskQueue, {\n    refetchInterval: 10000,\n    enabled: !!project\n  });\n  const {\n    data: connection,\n    isLoading: connectionLoading\n  } = useQuery('connectionStatus', getConnectionStatus, {\n    refetchInterval: 10000\n  });\n  if (projectLoading || queueLoading || connectionLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"400px\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n  if (projectError || queueError) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: \"Failed to load dashboard data. Please check your connection.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  if (!project) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Welcome to ClaudeTask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"info\",\n        sx: {\n          mb: 3\n        },\n        children: \"No active project found. Please initialize a project to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n  const getStatusColor = status => {\n    switch (status) {\n      case 'Done':\n        return 'success';\n      case 'In Progress':\n        return 'primary';\n      case 'Testing':\n        return 'warning';\n      case 'Code Review':\n        return 'secondary';\n      case 'Blocked':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'Done':\n        return /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 27\n        }, this);\n      case 'In Progress':\n        return /*#__PURE__*/_jsxDEV(PlayIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 34\n        }, this);\n      case 'Blocked':\n        return /*#__PURE__*/_jsxDEV(BlockedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 30\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(TaskIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      severity: connection !== null && connection !== void 0 && connection.connected ? 'success' : 'warning',\n      sx: {\n        mb: 3\n      },\n      children: connection !== null && connection !== void 0 && connection.connected ? `✅ Connected to ClaudeTask - Project: ${connection.project_name}` : `⚠️ Claude Code not connected - ${(connection === null || connection === void 0 ? void 0 : connection.error) || 'Unknown error'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Active Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              color: \"primary\",\n              gutterBottom: true,\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: project.path\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), project.tech_stack.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mt: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                gutterBottom: true,\n                children: \"Technologies:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1,\n                  flexWrap: 'wrap'\n                },\n                children: project.tech_stack.map(tech => /*#__PURE__*/_jsxDEV(Chip, {\n                  label: tech,\n                  size: \"small\"\n                }, tech, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Task Statistics\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    color: \"primary\",\n                    children: (queue === null || queue === void 0 ? void 0 : queue.pending_tasks.length) || 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 155,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Pending\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    color: \"warning.main\",\n                    children: (queue === null || queue === void 0 ? void 0 : queue.in_progress_tasks.length) || 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"In Progress\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  textAlign: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h4\",\n                    color: \"success.main\",\n                    children: (queue === null || queue === void 0 ? void 0 : queue.completed_today) || 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: \"Completed Today\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Active Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), queue !== null && queue !== void 0 && queue.in_progress_tasks.length ? /*#__PURE__*/_jsxDEV(List, {\n              children: queue.in_progress_tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n                divider: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: getStatusIcon(task.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: task.title,\n                  secondary: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Chip, {\n                      label: task.status,\n                      size: \"small\",\n                      color: getStatusColor(task.status)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 29\n                    }, this), task.assigned_agent && /*#__PURE__*/_jsxDEV(Chip, {\n                      label: `Agent: ${task.assigned_agent}`,\n                      size: \"small\",\n                      sx: {\n                        ml: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"No active tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Next Tasks in Queue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), queue !== null && queue !== void 0 && queue.pending_tasks.length ? /*#__PURE__*/_jsxDEV(List, {\n              children: queue.pending_tasks.slice(0, 5).map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n                divider: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  children: /*#__PURE__*/_jsxDEV(TaskIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: task.title,\n                  secondary: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      mt: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Chip, {\n                      label: task.priority,\n                      size: \"small\",\n                      color: task.priority === 'High' ? 'error' : task.priority === 'Medium' ? 'warning' : 'default'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: task.type,\n                      size: \"small\",\n                      sx: {\n                        ml: 1\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"No pending tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"f5ZCmvZw0Xm+em0OlyW/2XIA+3s=\", false, function () {\n  return [useQuery, useQuery, useQuery];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","Box","Grid","Card","CardContent","Typography","CircularProgress","Alert","Chip","List","ListItem","ListItemText","ListItemIcon","Assignment","TaskIcon","PlayArrow","PlayIcon","CheckCircle","DoneIcon","Warning","BlockedIcon","useQuery","getActiveProject","getTaskQueue","getConnectionStatus","jsxDEV","_jsxDEV","Dashboard","_s","data","project","isLoading","projectLoading","error","projectError","refetchInterval","queue","queueLoading","queueError","enabled","connection","connectionLoading","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","variant","gutterBottom","sx","mb","getStatusColor","status","getStatusIcon","connected","project_name","container","spacing","item","xs","md","color","name","path","tech_stack","length","mt","gap","flexWrap","map","tech","label","size","textAlign","pending_tasks","in_progress_tasks","completed_today","task","divider","primary","title","secondary","assigned_agent","ml","id","slice","priority","type","_c","$RefreshReg$"],"sources":["/Users/pavelvorosilov/Desktop/Work/Start Up/Claude Code Feature Framework/claudetask/frontend/src/pages/Dashboard.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Grid,\n  Card,\n  CardContent,\n  Typography,\n  CircularProgress,\n  Alert,\n  Chip,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  IconButton,\n} from '@mui/material';\nimport {\n  Assignment as TaskIcon,\n  PlayArrow as PlayIcon,\n  CheckCircle as DoneIcon,\n  Warning as BlockedIcon,\n} from '@mui/icons-material';\nimport { useQuery } from 'react-query';\nimport { getActiveProject, getTaskQueue, getConnectionStatus } from '../services/api';\n\nconst Dashboard: React.FC = () => {\n  const { data: project, isLoading: projectLoading, error: projectError } = useQuery(\n    'activeProject',\n    getActiveProject,\n    { refetchInterval: 30000 }\n  );\n\n  const { data: queue, isLoading: queueLoading, error: queueError } = useQuery(\n    'taskQueue',\n    getTaskQueue,\n    { \n      refetchInterval: 10000,\n      enabled: !!project\n    }\n  );\n\n  const { data: connection, isLoading: connectionLoading } = useQuery(\n    'connectionStatus',\n    getConnectionStatus,\n    { refetchInterval: 10000 }\n  );\n\n  if (projectLoading || queueLoading || connectionLoading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (projectError || queueError) {\n    return (\n      <Alert severity=\"error\">\n        Failed to load dashboard data. Please check your connection.\n      </Alert>\n    );\n  }\n\n  if (!project) {\n    return (\n      <Box>\n        <Typography variant=\"h4\" gutterBottom>\n          Welcome to ClaudeTask\n        </Typography>\n        <Alert severity=\"info\" sx={{ mb: 3 }}>\n          No active project found. Please initialize a project to get started.\n        </Alert>\n      </Box>\n    );\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'Done': return 'success';\n      case 'In Progress': return 'primary';\n      case 'Testing': return 'warning';\n      case 'Code Review': return 'secondary';\n      case 'Blocked': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'Done': return <DoneIcon />;\n      case 'In Progress': return <PlayIcon />;\n      case 'Blocked': return <BlockedIcon />;\n      default: return <TaskIcon />;\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Dashboard\n      </Typography>\n\n      {/* Connection Status */}\n      <Alert \n        severity={connection?.connected ? 'success' : 'warning'} \n        sx={{ mb: 3 }}\n      >\n        {connection?.connected ? (\n          `✅ Connected to ClaudeTask - Project: ${connection.project_name}`\n        ) : (\n          `⚠️ Claude Code not connected - ${connection?.error || 'Unknown error'}`\n        )}\n      </Alert>\n\n      <Grid container spacing={3}>\n        {/* Project Info */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Active Project\n              </Typography>\n              <Typography variant=\"h5\" color=\"primary\" gutterBottom>\n                {project.name}\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\n                {project.path}\n              </Typography>\n              {project.tech_stack.length > 0 && (\n                <Box sx={{ mt: 2 }}>\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Technologies:\n                  </Typography>\n                  <Box sx={{ display: 'flex', gap: 1, flexWrap: 'wrap' }}>\n                    {project.tech_stack.map((tech) => (\n                      <Chip key={tech} label={tech} size=\"small\" />\n                    ))}\n                  </Box>\n                </Box>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Task Statistics */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Task Statistics\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={4}>\n                  <Box textAlign=\"center\">\n                    <Typography variant=\"h4\" color=\"primary\">\n                      {queue?.pending_tasks.length || 0}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Pending\n                    </Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={4}>\n                  <Box textAlign=\"center\">\n                    <Typography variant=\"h4\" color=\"warning.main\">\n                      {queue?.in_progress_tasks.length || 0}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      In Progress\n                    </Typography>\n                  </Box>\n                </Grid>\n                <Grid item xs={4}>\n                  <Box textAlign=\"center\">\n                    <Typography variant=\"h4\" color=\"success.main\">\n                      {queue?.completed_today || 0}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Completed Today\n                    </Typography>\n                  </Box>\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Active Tasks */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Active Tasks\n              </Typography>\n              {queue?.in_progress_tasks.length ? (\n                <List>\n                  {queue.in_progress_tasks.map((task) => (\n                    <ListItem key={task.id} divider>\n                      <ListItemIcon>\n                        {getStatusIcon(task.status)}\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={task.title}\n                        secondary={\n                          <Box sx={{ mt: 1 }}>\n                            <Chip\n                              label={task.status}\n                              size=\"small\"\n                              color={getStatusColor(task.status) as any}\n                            />\n                            {task.assigned_agent && (\n                              <Chip\n                                label={`Agent: ${task.assigned_agent}`}\n                                size=\"small\"\n                                sx={{ ml: 1 }}\n                              />\n                            )}\n                          </Box>\n                        }\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              ) : (\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  No active tasks\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n\n        {/* Pending Tasks */}\n        <Grid item xs={12} md={6}>\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Next Tasks in Queue\n              </Typography>\n              {queue?.pending_tasks.length ? (\n                <List>\n                  {queue.pending_tasks.slice(0, 5).map((task) => (\n                    <ListItem key={task.id} divider>\n                      <ListItemIcon>\n                        <TaskIcon />\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={task.title}\n                        secondary={\n                          <Box sx={{ mt: 1 }}>\n                            <Chip\n                              label={task.priority}\n                              size=\"small\"\n                              color={\n                                task.priority === 'High' ? 'error' :\n                                task.priority === 'Medium' ? 'warning' : 'default'\n                              }\n                            />\n                            <Chip\n                              label={task.type}\n                              size=\"small\"\n                              sx={{ ml: 1 }}\n                            />\n                          </Box>\n                        }\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              ) : (\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  No pending tasks\n                </Typography>\n              )}\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}