{"ast":null,"code":"var _jsxFileName = \"/Users/pavelvorosilov/Desktop/Work/Start Up/Claude Code Feature Framework/claudetask/frontend/src/pages/ProjectSetup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Card, CardContent, Typography, TextField, Button, Alert, CircularProgress, Step, Stepper, StepLabel, List, ListItem, ListItemIcon, ListItemText, Chip } from '@mui/material';\nimport { Folder as FolderIcon, CheckCircle as CheckIcon } from '@mui/icons-material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { initializeProject } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst steps = ['Project Configuration', 'Initialize', 'Setup Complete'];\nconst ProjectSetup = () => {\n  _s();\n  const [activeStep, setActiveStep] = useState(0);\n  const [projectData, setProjectData] = useState({\n    project_path: '',\n    project_name: '',\n    github_repo: ''\n  });\n  const [initResult, setInitResult] = useState(null);\n  const queryClient = useQueryClient();\n  const initializeMutation = useMutation(initializeProject, {\n    onSuccess: result => {\n      setInitResult(result);\n      setActiveStep(2);\n      queryClient.invalidateQueries('activeProject');\n    },\n    onError: error => {\n      console.error('Initialization failed:', error);\n    }\n  });\n  const handleNext = () => {\n    if (activeStep === 0) {\n      if (projectData.project_path && projectData.project_name) {\n        setActiveStep(1);\n        initializeMutation.mutate(projectData);\n      }\n    }\n  };\n  const handleReset = () => {\n    setActiveStep(0);\n    setProjectData({\n      project_path: '',\n      project_name: '',\n      github_repo: ''\n    });\n    setInitResult(null);\n  };\n  const renderStepContent = () => {\n    var _initializeMutation$e, _initializeMutation$e2, _initializeMutation$e3;\n    switch (activeStep) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: \"Project Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              paragraph: true,\n              children: \"Configure your project to work with ClaudeTask. This will create the necessary configuration files and set up MCP integration.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Project Path\",\n              placeholder: \"/path/to/your/project\",\n              value: projectData.project_path,\n              onChange: e => setProjectData({\n                ...projectData,\n                project_path: e.target.value\n              }),\n              sx: {\n                mb: 2\n              },\n              helperText: \"Absolute path to your project directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"Project Name\",\n              placeholder: \"My Awesome Project\",\n              value: projectData.project_name,\n              onChange: e => setProjectData({\n                ...projectData,\n                project_name: e.target.value\n              }),\n              sx: {\n                mb: 2\n              },\n              helperText: \"Display name for your project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              label: \"GitHub Repository (Optional)\",\n              placeholder: \"https://github.com/user/repo\",\n              value: projectData.github_repo,\n              onChange: e => setProjectData({\n                ...projectData,\n                github_repo: e.target.value\n              }),\n              sx: {\n                mb: 3\n              },\n              helperText: \"Link to your GitHub repository\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"info\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"What happens during initialization:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                children: [/*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(FolderIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Creates .claudetask/ directory in your project\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Generates CLAUDE.md configuration\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Sets up default agents\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 129,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: \"Creates .mcp.json for Claude Code integration\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleNext,\n              disabled: !projectData.project_path || !projectData.project_name,\n              fullWidth: true,\n              children: \"Initialize Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this);\n      case 1:\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              py: 4,\n              children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 60,\n                sx: {\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Initializing Project...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                children: [\"Setting up ClaudeTask configuration for \", projectData.project_name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), initializeMutation.error && /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              sx: {\n                mt: 2\n              },\n              children: [\"Initialization failed: \", ((_initializeMutation$e = initializeMutation.error) === null || _initializeMutation$e === void 0 ? void 0 : (_initializeMutation$e2 = _initializeMutation$e.response) === null || _initializeMutation$e2 === void 0 ? void 0 : (_initializeMutation$e3 = _initializeMutation$e2.data) === null || _initializeMutation$e3 === void 0 ? void 0 : _initializeMutation$e3.detail) || 'Unknown error']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this);\n      case 2:\n        return /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n              py: 2,\n              children: [/*#__PURE__*/_jsxDEV(CheckIcon, {\n                color: \"success\",\n                sx: {\n                  fontSize: 60,\n                  mb: 2\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                color: \"success.main\",\n                children: \"Project Initialized Successfully!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), initResult && /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Configuration Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Project ID: \", /*#__PURE__*/_jsxDEV(Chip, {\n                    label: initResult.project_id,\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 35\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"MCP Configured: \", initResult.mcp_configured ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: \"Yes\",\n                    color: \"success\",\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 25\n                  }, this) : /*#__PURE__*/_jsxDEV(Chip, {\n                    label: \"No\",\n                    color: \"error\",\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                gutterBottom: true,\n                children: \"Files Created:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(List, {\n                dense: true,\n                children: initResult.files_created.map((file, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n                  children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                    children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                      fontSize: \"small\",\n                      color: \"success\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                    primary: file\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 19\n              }, this), initResult.claude_restart_required && /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"warning\",\n                sx: {\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Important:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 25\n                  }, this), \" You need to restart Claude Code for the MCP configuration to take effect. The .mcp.json file has been created in your project root.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"success\",\n                sx: {\n                  mt: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: \"Your project is now ready for ClaudeTask! You can start creating tasks and let Claude handle the implementation.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              onClick: handleReset,\n              fullWidth: true,\n              sx: {\n                mt: 3\n              },\n              children: \"Initialize Another Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this);\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Project Setup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      color: \"text.secondary\",\n      paragraph: true,\n      children: \"Initialize your project to work with ClaudeTask and Claude Code.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stepper, {\n      activeStep: activeStep,\n      sx: {\n        mb: 4\n      },\n      children: steps.map(label => /*#__PURE__*/_jsxDEV(Step, {\n        children: /*#__PURE__*/_jsxDEV(StepLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), renderStepContent()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 251,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectSetup, \"/CsE0JIOSHV3B1bpm99I354tQGg=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = ProjectSetup;\nexport default ProjectSetup;\nvar _c;\n$RefreshReg$(_c, \"ProjectSetup\");","map":{"version":3,"names":["React","useState","Box","Card","CardContent","Typography","TextField","Button","Alert","CircularProgress","Step","Stepper","StepLabel","List","ListItem","ListItemIcon","ListItemText","Chip","Folder","FolderIcon","CheckCircle","CheckIcon","useMutation","useQueryClient","initializeProject","jsxDEV","_jsxDEV","steps","ProjectSetup","_s","activeStep","setActiveStep","projectData","setProjectData","project_path","project_name","github_repo","initResult","setInitResult","queryClient","initializeMutation","onSuccess","result","invalidateQueries","onError","error","console","handleNext","mutate","handleReset","renderStepContent","_initializeMutation$e","_initializeMutation$e2","_initializeMutation$e3","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","paragraph","fullWidth","label","placeholder","value","onChange","e","target","sx","mb","helperText","severity","dense","fontSize","primary","onClick","disabled","display","flexDirection","alignItems","py","size","mt","response","data","detail","project_id","mcp_configured","files_created","map","file","index","claude_restart_required","_c","$RefreshReg$"],"sources":["/Users/pavelvorosilov/Desktop/Work/Start Up/Claude Code Feature Framework/claudetask/frontend/src/pages/ProjectSetup.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Typography,\n  TextField,\n  Button,\n  Alert,\n  CircularProgress,\n  Step,\n  Stepper,\n  StepLabel,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Chip,\n} from '@mui/material';\nimport {\n  Folder as FolderIcon,\n  CheckCircle as CheckIcon,\n  Warning as WarningIcon,\n} from '@mui/icons-material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { initializeProject, InitializeProjectRequest } from '../services/api';\n\nconst steps = ['Project Configuration', 'Initialize', 'Setup Complete'];\n\nconst ProjectSetup: React.FC = () => {\n  const [activeStep, setActiveStep] = useState(0);\n  const [projectData, setProjectData] = useState<InitializeProjectRequest>({\n    project_path: '',\n    project_name: '',\n    github_repo: '',\n  });\n  const [initResult, setInitResult] = useState<any>(null);\n\n  const queryClient = useQueryClient();\n\n  const initializeMutation = useMutation(initializeProject, {\n    onSuccess: (result) => {\n      setInitResult(result);\n      setActiveStep(2);\n      queryClient.invalidateQueries('activeProject');\n    },\n    onError: (error: any) => {\n      console.error('Initialization failed:', error);\n    },\n  });\n\n  const handleNext = () => {\n    if (activeStep === 0) {\n      if (projectData.project_path && projectData.project_name) {\n        setActiveStep(1);\n        initializeMutation.mutate(projectData);\n      }\n    }\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n    setProjectData({ project_path: '', project_name: '', github_repo: '' });\n    setInitResult(null);\n  };\n\n  const renderStepContent = () => {\n    switch (activeStep) {\n      case 0:\n        return (\n          <Card>\n            <CardContent>\n              <Typography variant=\"h6\" gutterBottom>\n                Project Configuration\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\n                Configure your project to work with ClaudeTask. This will create the necessary\n                configuration files and set up MCP integration.\n              </Typography>\n              \n              <TextField\n                fullWidth\n                label=\"Project Path\"\n                placeholder=\"/path/to/your/project\"\n                value={projectData.project_path}\n                onChange={(e) => setProjectData({ ...projectData, project_path: e.target.value })}\n                sx={{ mb: 2 }}\n                helperText=\"Absolute path to your project directory\"\n              />\n              \n              <TextField\n                fullWidth\n                label=\"Project Name\"\n                placeholder=\"My Awesome Project\"\n                value={projectData.project_name}\n                onChange={(e) => setProjectData({ ...projectData, project_name: e.target.value })}\n                sx={{ mb: 2 }}\n                helperText=\"Display name for your project\"\n              />\n              \n              <TextField\n                fullWidth\n                label=\"GitHub Repository (Optional)\"\n                placeholder=\"https://github.com/user/repo\"\n                value={projectData.github_repo}\n                onChange={(e) => setProjectData({ ...projectData, github_repo: e.target.value })}\n                sx={{ mb: 3 }}\n                helperText=\"Link to your GitHub repository\"\n              />\n\n              <Alert severity=\"info\" sx={{ mb: 2 }}>\n                <Typography variant=\"body2\">\n                  <strong>What happens during initialization:</strong>\n                </Typography>\n                <List dense>\n                  <ListItem>\n                    <ListItemIcon><FolderIcon fontSize=\"small\" /></ListItemIcon>\n                    <ListItemText primary=\"Creates .claudetask/ directory in your project\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon><CheckIcon fontSize=\"small\" /></ListItemIcon>\n                    <ListItemText primary=\"Generates CLAUDE.md configuration\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon><CheckIcon fontSize=\"small\" /></ListItemIcon>\n                    <ListItemText primary=\"Sets up default agents\" />\n                  </ListItem>\n                  <ListItem>\n                    <ListItemIcon><CheckIcon fontSize=\"small\" /></ListItemIcon>\n                    <ListItemText primary=\"Creates .mcp.json for Claude Code integration\" />\n                  </ListItem>\n                </List>\n              </Alert>\n\n              <Button\n                variant=\"contained\"\n                onClick={handleNext}\n                disabled={!projectData.project_path || !projectData.project_name}\n                fullWidth\n              >\n                Initialize Project\n              </Button>\n            </CardContent>\n          </Card>\n        );\n\n      case 1:\n        return (\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" py={4}>\n                <CircularProgress size={60} sx={{ mb: 2 }} />\n                <Typography variant=\"h6\" gutterBottom>\n                  Initializing Project...\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Setting up ClaudeTask configuration for {projectData.project_name}\n                </Typography>\n              </Box>\n              \n              {initializeMutation.error && (\n                <Alert severity=\"error\" sx={{ mt: 2 }}>\n                  Initialization failed: {(initializeMutation.error as any)?.response?.data?.detail || 'Unknown error'}\n                </Alert>\n              )}\n            </CardContent>\n          </Card>\n        );\n\n      case 2:\n        return (\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" py={2}>\n                <CheckIcon color=\"success\" sx={{ fontSize: 60, mb: 2 }} />\n                <Typography variant=\"h6\" gutterBottom color=\"success.main\">\n                  Project Initialized Successfully!\n                </Typography>\n              </Box>\n\n              {initResult && (\n                <Box>\n                  <Typography variant=\"subtitle1\" gutterBottom>\n                    Configuration Details:\n                  </Typography>\n                  \n                  <Box sx={{ mb: 2 }}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Project ID: <Chip label={initResult.project_id} size=\"small\" />\n                    </Typography>\n                  </Box>\n\n                  <Box sx={{ mb: 2 }}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      MCP Configured: {initResult.mcp_configured ? \n                        <Chip label=\"Yes\" color=\"success\" size=\"small\" /> : \n                        <Chip label=\"No\" color=\"error\" size=\"small\" />\n                      }\n                    </Typography>\n                  </Box>\n\n                  <Typography variant=\"subtitle2\" gutterBottom>\n                    Files Created:\n                  </Typography>\n                  <List dense>\n                    {initResult.files_created.map((file: string, index: number) => (\n                      <ListItem key={index}>\n                        <ListItemIcon>\n                          <CheckIcon fontSize=\"small\" color=\"success\" />\n                        </ListItemIcon>\n                        <ListItemText primary={file} />\n                      </ListItem>\n                    ))}\n                  </List>\n\n                  {initResult.claude_restart_required && (\n                    <Alert severity=\"warning\" sx={{ mt: 2 }}>\n                      <Typography variant=\"body2\">\n                        <strong>Important:</strong> You need to restart Claude Code for the MCP configuration to take effect.\n                        The .mcp.json file has been created in your project root.\n                      </Typography>\n                    </Alert>\n                  )}\n\n                  <Alert severity=\"success\" sx={{ mt: 2 }}>\n                    <Typography variant=\"body2\">\n                      Your project is now ready for ClaudeTask! You can start creating tasks and let Claude handle the implementation.\n                    </Typography>\n                  </Alert>\n                </Box>\n              )}\n\n              <Button\n                variant=\"outlined\"\n                onClick={handleReset}\n                fullWidth\n                sx={{ mt: 3 }}\n              >\n                Initialize Another Project\n              </Button>\n            </CardContent>\n          </Card>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Box>\n      <Typography variant=\"h4\" gutterBottom>\n        Project Setup\n      </Typography>\n      \n      <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\n        Initialize your project to work with ClaudeTask and Claude Code.\n      </Typography>\n\n      <Stepper activeStep={activeStep} sx={{ mb: 4 }}>\n        {steps.map((label) => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n\n      {renderStepContent()}\n    </Box>\n  );\n};\n\nexport default ProjectSetup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}